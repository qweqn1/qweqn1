local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "üî• Qweqny Hub BETA",
   LoadingTitle = "üî• Qweqny Hub BETA",
   LoadingSubtitle = "by Qweqny",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Qweqny hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Key | Youtube Hub",
      Subtitle = "Key System",
      Note = "Key In Discord Server",
      FileName = "YoutubeHubKey1", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/AtgzSPWK"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè† Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "By:Qweqny",
   Content = "Kurucunun Discordu:qweqny",
   Duration = 5,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
            print("The user tapped Okay!")
         end
      }
   },
})

-- Infinite Jump Toggle Button
local Button = MainTab:CreateButton({
   Name = "Infinite Jump Toggle",
   Callback = function()
       -- Toggles the infinite jump between on or off on every script run
       _G.infinjump = not _G.infinjump

       if _G.infinJumpStarted == nil then
           -- Ensures this only runs once to save resources
           _G.infinJumpStarted = true

           -- Notifies readiness
           game.StarterGui:SetCore("SendNotification", {Title="Youtube Hub"; Text="Infinite Jump Activated!"; Duration=5;})

           -- The actual infinite jump
           local plr = game:GetService('Players').LocalPlayer
           local m = plr:GetMouse()
           m.KeyDown:connect(function(k)
               if _G.infinjump then
                   if k:byte() == 32 then
                       humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
                       humanoid:ChangeState('Jumping')
                       wait()
                       humanoid:ChangeState('Seated')
                   end
               end
           end)
       end
   end,
})

-- WalkSpeed Slider
local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderws", -- A flag is the identifier for the configuration file
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

-- JumpPower Slider
local Slider = MainTab:CreateSlider({
   Name = "JumpPower Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Power",
   CurrentValue = 16,
   Flag = "sliderjp", -- A flag is the identifier for the configuration file
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

-- Input for Walkspeed
local Input = MainTab:CreateInput({
   Name = "Walkspeed",
   PlaceholderText = "1-500",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(Text)
   end,
})

-- Toggle Fly Button
local Button = MainTab:CreateButton({
    Name = "Toggle Fly",
    Callback = function()
        -- Fly script starts here
        local plr = game.Players.LocalPlayer
        local mouse = plr:GetMouse()

        local player = plr
        local flying = false
        local speed = 10
        local keys = {a=false, d=false, w=false, s=false}

        if workspace:FindFirstChild("Core") then
            workspace.Core:Destroy()
        end

        local Core = Instance.new("Part")
        Core.Name = "Core"
        Core.Size = Vector3.new(0.05, 0.05, 0.05)
        Core.Parent = workspace

        local Weld = Instance.new("Weld", Core)
        Weld.Part0 = Core
        Weld.Part1 = player.Character.LowerTorso
        Weld.C0 = CFrame.new(0, 0, 0)

        local torso = workspace.Core
        local function startFlying()
            local pos = Instance.new("BodyPosition", torso)
            local gyro = Instance.new("BodyGyro", torso)
            pos.Name = "EPIXPOS"
            pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
            pos.position = torso.Position
            gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            gyro.cframe = torso.CFrame

            repeat
                wait()
                player.Character.Humanoid.PlatformStand = true
                local new = gyro.cframe - gyro.cframe.p + pos.position
                if not keys.w and not keys.s and not keys.a and not keys.d then
                    speed = 5
                end
                if keys.w then
                    new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                end
                if keys.s then
                    new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                end
                if keys.d then
                    new = new * CFrame.new(speed, 0, 0)
                end
                if keys.a then
                    new = new * CFrame.new(-speed, 0, 0)
                end
                pos.position = new.p
                if keys.w then
                    gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
                elseif keys.s then
                    gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
                else
                    gyro.cframe = workspace.CurrentCamera.CoordinateFrame
                end
            until not flying
            if gyro then gyro:Destroy() end
            if pos then pos:Destroy() end
            player.Character.Humanoid.PlatformStand = false
        end

        mouse.KeyDown:Connect(function(key)
            if key == "w" then
                keys.w = true
            elseif key == "s" then
                keys.s = true
            elseif key == "a" then
                keys.a = true
            elseif key == "d" then
                keys.d = true
            elseif key == "x" then
                flying = not flying
                if flying then
                    startFlying()
                end
            end
        end)

        mouse.KeyUp:Connect(function(key)
            if key == "w" then
                keys.w = false
            elseif key == "s" then
                keys.s = false
            elseif key == "a" then
                keys.a = false
            elseif key == "d" then
                keys.d = false
            end
        end)
    end,
})

-- Toggle Spin Button
local Button = MainTab:CreateButton({
    Name = "Toggle Spin",
    Callback = function()
        -- Spin'i etkinle≈ütir veya devre dƒ±≈üƒ± bƒ±rak
        _G.spinActive = not _G.spinActive

        if _G.spinStarted == nil then
            _G.spinStarted = true

            game.StarterGui:SetCore("SendNotification", {
                Title = "Qweqny Hub",
                Text = "Spin Script Activated!",
                Duration = 5
            })

            -- Spin d√∂ng√ºs√º
            spawn(function()
                while true do
                    if _G.spinActive then
                        -- Sabit hƒ±zda spin i≈ülemi
                        local character = game.Players.LocalPlayer.Character
                        if character and character.PrimaryPart then
                            character:SetPrimaryPartCFrame(character.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(5), 0))
                        end
                    end
                    wait(0.05)
                end
            end)
        end
    end,
})

-- Toggle NoClip Button
local Button = MainTab:CreateButton({
    Name = "NoClip Toggle",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        local humanoid = character:WaitForChild("Humanoid")

        if humanoid:GetState() == Enum.HumanoidStateType.Physics then
            humanoid.PlatformStand = false
        else
            humanoid.PlatformStand = true
            character:MoveTo(Vector3.new(9999999, 9999999, 9999999))
        end
    end,
})

-- Bang Button
local Button = MainTab:CreateButton({
    Name = "Bang Button",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        -- Your Bang logic here (shoot or damage)
        print("Bang!")
    end,
})
